# import * from "./types.graphql"

input CreateJourneyInput {
  to: SupportedLanguage!
  name: String!
  avatar: UploadingHsl!
  model: String!
}

input UpdateJourneyInput {
  name: String
  avatar: String
}

type InitialPathResponse {
  path: UserPath!
  materials: [Material!]!
}

input DocumentationInput {
  journeyId: ID!
  title: String!
  searchTerm: String!
}

type UserQuery {
  my_journeys: JourneyConnection!
  journey(id: ID!): Journey
  path(id: ID!): UserPath
  path_materials(id: ID!, pagination: PaginationInput): MaterialConnection!
  material(id: ID!): Material
  initial_path(journeyId: ID!): InitialPathResponse
  conversation_turns(materialId: ID!): [ConversationTurn!]!
  parsed_units(text: String!, journeyId: ID!): LinguisticUnitSet!
  documentation(input: DocumentationInput!): UserDoc!
  journey_docs(journeyId: ID!, pagination: PaginationInput): UserDocConnection!
  material_feedbacks(materialId: ID!): [AIFeedback!]!
}

input CreateMaterialInput {
  journeyId: ID!
  pathId: ID!
}

input AnswerMaterialInput {
  materialId: ID!
  answer: JSON!
}

input CreatePathInput {
  journeyId: ID!
  type: PathType!
  profession: String
}

type StartInitialResponse {
  path: UserPath!
  materials: [Material!]!
}

type CreateJourneyResponse {
  journey: Journey!
  path: UserPath!
  materials: [Material!]!
}

input StartConversationInput {
  materialId: ID!
}

input AddUserInputInput {
  materialId: ID!
  text: String
  audio_ID: ID
}

enum AnswerMaterialResponseNext {
  CREATING_NEW
  INITIAL_END
  INITIAL_CONTINUE
}

type AnswerMaterialResponse {
  next: AnswerMaterialResponseNext!
  newPath: ID
  newMaterial: ID
}

input GenMaterialInput {
  journeyId: ID!
  pathId: ID!
  type: MaterialType!
}

type UserMutation {
  create_journey(input: CreateJourneyInput!): CreateJourneyResponse!

  delete_journey(id: ID!): Boolean! # unimplemented
  update_journey(id: ID!, input: UpdateJourneyInput!): Journey! # unimplemented
  unUnderstoodQuestions(journeyId: ID!, pathId: ID!): StartInitialResponse!
  create_path(input: CreatePathInput!): UserPath! # unimplemented
  answer_material(input: AnswerMaterialInput!): AnswerMaterialResponse!

  add_user_input(input: AddUserInputInput!): ConversationTurn!

  """
  Delete template content.
  """
  delete_temp(num: Int!): Boolean!

  """
  Reset journey.
  """
  reset_journey(id: ID!): Boolean!

  clear_conversation(materialId: ID!): Boolean!

  remove_conversation_assistant: Boolean!

  prepare_material(materialId: ID!): Material!

  regenerate_material(materialId: ID!): Material!

  gen_material(input: GenMaterialInput!): Material!
}
